/**
 * This file is autogenerated by Scaffold-ETH.
 * You should not edit it manually or your changes might be overwritten.
 */
import { GenericContractsDeclaration } from "~~/utils/scaffold-eth/contract";

const deployedContracts = {
  31337: {
    ListingAttester: {
      address: "0x68B1D87F95878fE05B998F19b66F4baba5De1aed",
      abi: [
        {
          inputs: [
            {
              internalType: "contract IEAS",
              name: "eas",
              type: "address",
            },
            {
              internalType: "bytes32",
              name: "listingSchemaUID",
              type: "bytes32",
            },
          ],
          stateMutability: "nonpayable",
          type: "constructor",
        },
        {
          inputs: [],
          name: "InvalidEAS",
          type: "error",
        },
        {
          inputs: [],
          name: "_eas",
          outputs: [
            {
              internalType: "contract IEAS",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "_listingSchemaUID",
          outputs: [
            {
              internalType: "bytes32",
              name: "",
              type: "bytes32",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "listingId",
              type: "uint256",
            },
            {
              internalType: "string",
              name: "listingName",
              type: "string",
            },
            {
              internalType: "address",
              name: "seller",
              type: "address",
            },
          ],
          name: "attestListing",
          outputs: [
            {
              internalType: "bytes32",
              name: "attestationUID",
              type: "bytes32",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
      ],
      inheritedFunctions: {},
    },
    ListingConnectionAttester: {
      address: "0x3Aa5ebB10DC797CAC828524e59A333d0A371443c",
      abi: [
        {
          inputs: [
            {
              internalType: "contract IEAS",
              name: "eas",
              type: "address",
            },
            {
              internalType: "bytes32",
              name: "listingConnectionSchemaUID",
              type: "bytes32",
            },
          ],
          stateMutability: "nonpayable",
          type: "constructor",
        },
        {
          inputs: [],
          name: "InvalidEAS",
          type: "error",
        },
        {
          inputs: [],
          name: "_eas",
          outputs: [
            {
              internalType: "contract IEAS",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "_listingConnectionSchemaUID",
          outputs: [
            {
              internalType: "bytes32",
              name: "",
              type: "bytes32",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "listingId",
              type: "uint256",
            },
            {
              internalType: "address",
              name: "connectedUser",
              type: "address",
            },
          ],
          name: "attestListingConnection",
          outputs: [
            {
              internalType: "bytes32",
              name: "attestationUID",
              type: "bytes32",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
      ],
      inheritedFunctions: {},
    },
    ListingPaymentAttester: {
      address: "0xc6e7DF5E7b4f2A278906862b61205850344D4e7d",
      abi: [
        {
          inputs: [
            {
              internalType: "contract IEAS",
              name: "eas",
              type: "address",
            },
            {
              internalType: "bytes32",
              name: "listingPaymentSchemaUID",
              type: "bytes32",
            },
          ],
          stateMutability: "nonpayable",
          type: "constructor",
        },
        {
          inputs: [],
          name: "InvalidEAS",
          type: "error",
        },
        {
          inputs: [],
          name: "_eas",
          outputs: [
            {
              internalType: "contract IEAS",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "_listingPaymentSchemaUID",
          outputs: [
            {
              internalType: "bytes32",
              name: "",
              type: "bytes32",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "listingId",
              type: "uint256",
            },
            {
              internalType: "address",
              name: "buyer",
              type: "address",
            },
          ],
          name: "attestListingPayment",
          outputs: [
            {
              internalType: "bytes32",
              name: "attestationUID",
              type: "bytes32",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
      ],
      inheritedFunctions: {},
    },
    Listings: {
      address: "0x59b670e9fA9D0A427751Af201D676719a970857b",
      abi: [
        {
          inputs: [
            {
              internalType: "address",
              name: "listingAttester",
              type: "address",
            },
            {
              internalType: "address",
              name: "listingConnectionAttester",
              type: "address",
            },
            {
              internalType: "address",
              name: "listingPaymentAttester",
              type: "address",
            },
          ],
          stateMutability: "nonpayable",
          type: "constructor",
        },
        {
          inputs: [],
          name: "FailedTodSendEther",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "listingId",
              type: "uint256",
            },
          ],
          name: "Listings_ListingUnavailableForBuying",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "connectedUser",
              type: "address",
            },
          ],
          name: "Listings__InvalidConnectedUser",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "seller",
              type: "address",
            },
          ],
          name: "Listings__InvalidSeller",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "listingId",
              type: "uint256",
            },
          ],
          name: "Listings__NotExistedListingId",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "connectedUser",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "listingId",
              type: "uint256",
            },
          ],
          name: "Listings__SellerCannotSelfConnected",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "amountOfETH",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "price",
              type: "uint256",
            },
          ],
          name: "Listings__UnequalAmountOfETHAndPrice",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "connectedUser",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "listingId",
              type: "uint256",
            },
          ],
          name: "Listings__UserAlreadyConnected",
          type: "error",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "seller",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "listingId",
              type: "uint256",
            },
          ],
          name: "AddListing",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "buyer",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "listingId",
              type: "uint256",
            },
          ],
          name: "BuyListing",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "connectedUser",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "listingId",
              type: "uint256",
            },
          ],
          name: "CreateListingConnection",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "seller",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "listingId",
              type: "uint256",
            },
          ],
          name: "DeleteListing",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "seller",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "listingId",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "string",
              name: "newName",
              type: "string",
            },
          ],
          name: "UpdateListing",
          type: "event",
        },
        {
          inputs: [],
          name: "_listingAttester",
          outputs: [
            {
              internalType: "contract ListingAttester",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "_listingConnectionAttester",
          outputs: [
            {
              internalType: "contract ListingConnectionAttester",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "_listingPaymentAttester",
          outputs: [
            {
              internalType: "contract ListingPaymentAttester",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "name",
              type: "string",
            },
            {
              internalType: "string",
              name: "location",
              type: "string",
            },
            {
              internalType: "string",
              name: "description",
              type: "string",
            },
            {
              internalType: "uint256",
              name: "price",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "beds",
              type: "uint256",
            },
            {
              internalType: "string",
              name: "cid",
              type: "string",
            },
          ],
          name: "addListing",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "id",
              type: "uint256",
            },
          ],
          name: "buyListing",
          outputs: [],
          stateMutability: "payable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "buyers",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          name: "connectedUsers",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "listingId",
              type: "uint256",
            },
          ],
          name: "createListingConnection",
          outputs: [
            {
              internalType: "bytes32",
              name: "attestationUID",
              type: "bytes32",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "id",
              type: "uint256",
            },
          ],
          name: "deleteListing",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "existingIds",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "getAllListingConnections",
          outputs: [
            {
              components: [
                {
                  internalType: "uint256",
                  name: "listingId",
                  type: "uint256",
                },
                {
                  internalType: "address",
                  name: "connectedUser",
                  type: "address",
                },
                {
                  internalType: "bytes32",
                  name: "attestationUID",
                  type: "bytes32",
                },
              ],
              internalType: "struct Listings.ListingConnection[]",
              name: "allListingConnections",
              type: "tuple[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "getAllListingPayments",
          outputs: [
            {
              components: [
                {
                  internalType: "uint256",
                  name: "listingId",
                  type: "uint256",
                },
                {
                  internalType: "address",
                  name: "buyer",
                  type: "address",
                },
                {
                  internalType: "bytes32",
                  name: "attestationUID",
                  type: "bytes32",
                },
              ],
              internalType: "struct Listings.ListingPayment[]",
              name: "allListingPayments",
              type: "tuple[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "getAllListings",
          outputs: [
            {
              components: [
                {
                  internalType: "uint256",
                  name: "id",
                  type: "uint256",
                },
                {
                  internalType: "string",
                  name: "name",
                  type: "string",
                },
                {
                  internalType: "address",
                  name: "seller",
                  type: "address",
                },
                {
                  internalType: "bytes32",
                  name: "attestationUID",
                  type: "bytes32",
                },
                {
                  internalType: "string",
                  name: "location",
                  type: "string",
                },
                {
                  internalType: "string",
                  name: "description",
                  type: "string",
                },
                {
                  internalType: "uint256",
                  name: "price",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "beds",
                  type: "uint256",
                },
                {
                  internalType: "string",
                  name: "cid",
                  type: "string",
                },
              ],
              internalType: "struct Listings.Listing[]",
              name: "allListings",
              type: "tuple[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "idToIndex",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "listingConnections",
          outputs: [
            {
              internalType: "uint256",
              name: "listingId",
              type: "uint256",
            },
            {
              internalType: "address",
              name: "connectedUser",
              type: "address",
            },
            {
              internalType: "bytes32",
              name: "attestationUID",
              type: "bytes32",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "listingPayments",
          outputs: [
            {
              internalType: "uint256",
              name: "listingId",
              type: "uint256",
            },
            {
              internalType: "address",
              name: "buyer",
              type: "address",
            },
            {
              internalType: "bytes32",
              name: "attestationUID",
              type: "bytes32",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "listings",
          outputs: [
            {
              internalType: "uint256",
              name: "id",
              type: "uint256",
            },
            {
              internalType: "string",
              name: "name",
              type: "string",
            },
            {
              internalType: "address",
              name: "seller",
              type: "address",
            },
            {
              internalType: "bytes32",
              name: "attestationUID",
              type: "bytes32",
            },
            {
              internalType: "string",
              name: "location",
              type: "string",
            },
            {
              internalType: "string",
              name: "description",
              type: "string",
            },
            {
              internalType: "uint256",
              name: "price",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "beds",
              type: "uint256",
            },
            {
              internalType: "string",
              name: "cid",
              type: "string",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "id",
              type: "uint256",
            },
            {
              internalType: "string",
              name: "name",
              type: "string",
            },
            {
              internalType: "string",
              name: "location",
              type: "string",
            },
            {
              internalType: "string",
              name: "description",
              type: "string",
            },
            {
              internalType: "uint256",
              name: "price",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "beds",
              type: "uint256",
            },
          ],
          name: "updateListing",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
      ],
      inheritedFunctions: {},
    },
  },
  84532: {
    ListingAttester: {
      address: "0x6f632A50a30D5A39Bc030b1d00fA58A165Df75b1",
      abi: [
        {
          inputs: [
            {
              internalType: "contract IEAS",
              name: "eas",
              type: "address",
            },
            {
              internalType: "bytes32",
              name: "listingSchemaUID",
              type: "bytes32",
            },
          ],
          stateMutability: "nonpayable",
          type: "constructor",
        },
        {
          inputs: [],
          name: "InvalidEAS",
          type: "error",
        },
        {
          inputs: [],
          name: "_eas",
          outputs: [
            {
              internalType: "contract IEAS",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "_listingSchemaUID",
          outputs: [
            {
              internalType: "bytes32",
              name: "",
              type: "bytes32",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "listingId",
              type: "uint256",
            },
            {
              internalType: "string",
              name: "listingName",
              type: "string",
            },
            {
              internalType: "address",
              name: "seller",
              type: "address",
            },
          ],
          name: "attestListing",
          outputs: [
            {
              internalType: "bytes32",
              name: "attestationUID",
              type: "bytes32",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
      ],
      inheritedFunctions: {},
    },
    ListingConnectionAttester: {
      address: "0x71f11Cf50EFF5A49c9cf60D75d1e3b32950D83fE",
      abi: [
        {
          inputs: [
            {
              internalType: "contract IEAS",
              name: "eas",
              type: "address",
            },
            {
              internalType: "bytes32",
              name: "listingConnectionSchemaUID",
              type: "bytes32",
            },
          ],
          stateMutability: "nonpayable",
          type: "constructor",
        },
        {
          inputs: [],
          name: "InvalidEAS",
          type: "error",
        },
        {
          inputs: [],
          name: "_eas",
          outputs: [
            {
              internalType: "contract IEAS",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "_listingConnectionSchemaUID",
          outputs: [
            {
              internalType: "bytes32",
              name: "",
              type: "bytes32",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "listingId",
              type: "uint256",
            },
            {
              internalType: "address",
              name: "connectedUser",
              type: "address",
            },
          ],
          name: "attestListingConnection",
          outputs: [
            {
              internalType: "bytes32",
              name: "attestationUID",
              type: "bytes32",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
      ],
      inheritedFunctions: {},
    },
    ListingPaymentAttester: {
      address: "0xE07CB215190DfbF59c80C4bdc16F4291e19704Fd",
      abi: [
        {
          inputs: [
            {
              internalType: "contract IEAS",
              name: "eas",
              type: "address",
            },
            {
              internalType: "bytes32",
              name: "listingPaymentSchemaUID",
              type: "bytes32",
            },
          ],
          stateMutability: "nonpayable",
          type: "constructor",
        },
        {
          inputs: [],
          name: "InvalidEAS",
          type: "error",
        },
        {
          inputs: [],
          name: "_eas",
          outputs: [
            {
              internalType: "contract IEAS",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "_listingPaymentSchemaUID",
          outputs: [
            {
              internalType: "bytes32",
              name: "",
              type: "bytes32",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "listingId",
              type: "uint256",
            },
            {
              internalType: "address",
              name: "buyer",
              type: "address",
            },
          ],
          name: "attestListingPayment",
          outputs: [
            {
              internalType: "bytes32",
              name: "attestationUID",
              type: "bytes32",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
      ],
      inheritedFunctions: {},
    },
    Listings: {
      address: "0x85Dfc9278E438DBc7754f0bF09fED1344F184A82",
      abi: [
        {
          inputs: [
            {
              internalType: "address",
              name: "listingAttester",
              type: "address",
            },
            {
              internalType: "address",
              name: "listingConnectionAttester",
              type: "address",
            },
            {
              internalType: "address",
              name: "listingPaymentAttester",
              type: "address",
            },
          ],
          stateMutability: "nonpayable",
          type: "constructor",
        },
        {
          inputs: [],
          name: "FailedTodSendEther",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "listingId",
              type: "uint256",
            },
          ],
          name: "Listings_ListingUnavailableForBuying",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "connectedUser",
              type: "address",
            },
          ],
          name: "Listings__InvalidConnectedUser",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "seller",
              type: "address",
            },
          ],
          name: "Listings__InvalidSeller",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "listingId",
              type: "uint256",
            },
          ],
          name: "Listings__NotExistedListingId",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "connectedUser",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "listingId",
              type: "uint256",
            },
          ],
          name: "Listings__SellerCannotSelfConnected",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "amountOfETH",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "price",
              type: "uint256",
            },
          ],
          name: "Listings__UnequalAmountOfETHAndPrice",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "connectedUser",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "listingId",
              type: "uint256",
            },
          ],
          name: "Listings__UserAlreadyConnected",
          type: "error",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "seller",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "listingId",
              type: "uint256",
            },
          ],
          name: "AddListing",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "buyer",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "listingId",
              type: "uint256",
            },
          ],
          name: "BuyListing",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "connectedUser",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "listingId",
              type: "uint256",
            },
          ],
          name: "CreateListingConnection",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "seller",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "listingId",
              type: "uint256",
            },
          ],
          name: "DeleteListing",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "seller",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "listingId",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "string",
              name: "newName",
              type: "string",
            },
          ],
          name: "UpdateListing",
          type: "event",
        },
        {
          inputs: [],
          name: "_listingAttester",
          outputs: [
            {
              internalType: "contract ListingAttester",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "_listingConnectionAttester",
          outputs: [
            {
              internalType: "contract ListingConnectionAttester",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "_listingPaymentAttester",
          outputs: [
            {
              internalType: "contract ListingPaymentAttester",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "name",
              type: "string",
            },
            {
              internalType: "string",
              name: "location",
              type: "string",
            },
            {
              internalType: "string",
              name: "description",
              type: "string",
            },
            {
              internalType: "uint256",
              name: "price",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "beds",
              type: "uint256",
            },
            {
              internalType: "string",
              name: "cid",
              type: "string",
            },
          ],
          name: "addListing",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "id",
              type: "uint256",
            },
          ],
          name: "buyListing",
          outputs: [],
          stateMutability: "payable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "buyers",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          name: "connectedUsers",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "listingId",
              type: "uint256",
            },
          ],
          name: "createListingConnection",
          outputs: [
            {
              internalType: "bytes32",
              name: "attestationUID",
              type: "bytes32",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "id",
              type: "uint256",
            },
          ],
          name: "deleteListing",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "existingIds",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "getAllListingConnections",
          outputs: [
            {
              components: [
                {
                  internalType: "uint256",
                  name: "listingId",
                  type: "uint256",
                },
                {
                  internalType: "address",
                  name: "connectedUser",
                  type: "address",
                },
                {
                  internalType: "bytes32",
                  name: "attestationUID",
                  type: "bytes32",
                },
              ],
              internalType: "struct Listings.ListingConnection[]",
              name: "allListingConnections",
              type: "tuple[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "getAllListingPayments",
          outputs: [
            {
              components: [
                {
                  internalType: "uint256",
                  name: "listingId",
                  type: "uint256",
                },
                {
                  internalType: "address",
                  name: "buyer",
                  type: "address",
                },
                {
                  internalType: "bytes32",
                  name: "attestationUID",
                  type: "bytes32",
                },
              ],
              internalType: "struct Listings.ListingPayment[]",
              name: "allListingPayments",
              type: "tuple[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "getAllListings",
          outputs: [
            {
              components: [
                {
                  internalType: "uint256",
                  name: "id",
                  type: "uint256",
                },
                {
                  internalType: "string",
                  name: "name",
                  type: "string",
                },
                {
                  internalType: "address",
                  name: "seller",
                  type: "address",
                },
                {
                  internalType: "bytes32",
                  name: "attestationUID",
                  type: "bytes32",
                },
                {
                  internalType: "string",
                  name: "location",
                  type: "string",
                },
                {
                  internalType: "string",
                  name: "description",
                  type: "string",
                },
                {
                  internalType: "uint256",
                  name: "price",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "beds",
                  type: "uint256",
                },
                {
                  internalType: "string",
                  name: "cid",
                  type: "string",
                },
              ],
              internalType: "struct Listings.Listing[]",
              name: "allListings",
              type: "tuple[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "idToIndex",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "listingConnections",
          outputs: [
            {
              internalType: "uint256",
              name: "listingId",
              type: "uint256",
            },
            {
              internalType: "address",
              name: "connectedUser",
              type: "address",
            },
            {
              internalType: "bytes32",
              name: "attestationUID",
              type: "bytes32",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "listingPayments",
          outputs: [
            {
              internalType: "uint256",
              name: "listingId",
              type: "uint256",
            },
            {
              internalType: "address",
              name: "buyer",
              type: "address",
            },
            {
              internalType: "bytes32",
              name: "attestationUID",
              type: "bytes32",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "listings",
          outputs: [
            {
              internalType: "uint256",
              name: "id",
              type: "uint256",
            },
            {
              internalType: "string",
              name: "name",
              type: "string",
            },
            {
              internalType: "address",
              name: "seller",
              type: "address",
            },
            {
              internalType: "bytes32",
              name: "attestationUID",
              type: "bytes32",
            },
            {
              internalType: "string",
              name: "location",
              type: "string",
            },
            {
              internalType: "string",
              name: "description",
              type: "string",
            },
            {
              internalType: "uint256",
              name: "price",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "beds",
              type: "uint256",
            },
            {
              internalType: "string",
              name: "cid",
              type: "string",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "id",
              type: "uint256",
            },
            {
              internalType: "string",
              name: "name",
              type: "string",
            },
            {
              internalType: "string",
              name: "location",
              type: "string",
            },
            {
              internalType: "string",
              name: "description",
              type: "string",
            },
            {
              internalType: "uint256",
              name: "price",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "beds",
              type: "uint256",
            },
          ],
          name: "updateListing",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
      ],
      inheritedFunctions: {},
    },
  },
} as const;

export default deployedContracts satisfies GenericContractsDeclaration;
